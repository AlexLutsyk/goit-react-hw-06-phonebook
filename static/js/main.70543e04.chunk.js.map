{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/phoneBookActions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","redux/phoneBookReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","phoneBookActions","addContact","createAction","contact","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useState","name","setName","setNumber","dispatch","useDispatch","handleChange","evt","currentTarget","value","className","s","form","onSubmit","preventDefault","formLabel","formInput","type","pattern","title","required","onChange","formButton","ContactList","contacts","useSelector","state","items","normalizeFilter","filter","toLowerCase","item","includes","getFilteredContacts","contactItemsList","map","contactItem","contactDelete","onClick","connect","event","target","filterInput","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateContacts","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","blacklist","storage","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","storeElements","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.70543e04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItemsList\":\"ContactList_contactItemsList__2f5kD\",\"contactItem\":\"ContactList_contactItem__1zDKP\",\"contactDelete\":\"ContactList_contactDelete__1NDJf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__I7JrZ\",\"filterInput\":\"Filter_filterInput__JLEr5\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\nconst addContact = createAction(\n  \"contacts/addContact\",\n  ({ contact, number }) => ({\n    payload: {\n      id: shortid.generate(),\n      contact,\n      number,\n    },\n  })\n);\n\nconst deleteContact = createAction(\"contacts/delete\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nconst phoneBookActions = { addContact, deleteContact, changeFilter };\n\nexport default phoneBookActions;\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport phoneBookActions from \"../../redux/phoneBookActions\";\r\n// import { connect } from \"react-redux\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    dispatch(phoneBookActions.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.formLabel}>\r\n        Name\r\n        <input\r\n          className={s.formInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.formLabel}>\r\n        Number\r\n        <input\r\n          className={s.formInput}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button className={s.formButton} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = ({ contacts: contacts }) => ({ contacts });\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onSubmit: ({ name, number }) =>\r\n//     dispatch(phoneBookActions.addContact({ name, number })),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\nexport default ContactForm;\r\n","// import { connect } from \"react-redux\";\r\nimport phoneBookActions from \"../../redux/phoneBookActions\";\r\nimport shortid from \"shortid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = () => {\r\n  const getFilteredContacts = (state) => {\r\n    const { items, filter } = state.contacts;\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return items.filter((item) =>\r\n      item.name.toLowerCase().includes(normalizeFilter)\r\n    );\r\n  };\r\n\r\n  const contacts = useSelector((state) => getFilteredContacts(state));\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = (id) => dispatch(phoneBookActions.deleteContact(id));\r\n  return (\r\n    <ul className={s.contactItemsList}>\r\n      {contacts.map(({ name, number }) => (\r\n        <li key={shortid.generate()} className={s.contactItem}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className={s.contactDelete}\r\n            onClick={() => onDelete(name)}\r\n          >\r\n            Delete contact\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// const getVisibleContacts = (allContacts, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   const visibleContacts = allContacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n//   return visibleContacts;\r\n// };\r\n\r\n// const mapStateToProps = ({ contacts: { state } }) => ({\r\n//   contacts: getFilteredContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDelete: (id) => dispatch(phoneBookActions.deleteContact(id)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\nexport default ContactList;\r\n","import s from \"./Filter.module.css\";\r\nimport phoneBookActions from \"../../redux/phoneBookActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (event) =>\r\n    dispatch(phoneBookActions.changeFilter(event.target.value)),\r\n});\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <div>\r\n      <label className={s.filter}>\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./App.css\";\n// import { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n// import shortid from \"shortid\";\n\nfunction App() {\n  // const [contacts, setContacts] = useState([\n  //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  // ]);\n  // const [filter, setFilter] = useState(\"\");\n\n  // useEffect(() => {\n  //   const localContacts = window.localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(localContacts);\n  //   if (parsedContacts) {\n  //     setContacts(parsedContacts);\n  //   }\n  // }, []);\n\n  // const firstRender = useRef(true);\n\n  // useEffect(() => {\n  //   if (firstRender.current) {\n  //     firstRender.current = false;\n  //     return;\n  //   }\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const addContact = ({ name, number }) => {\n  //   const contact = {\n  //     id: shortid.generate(),\n  //     name,\n  //     number,\n  //   };\n\n  //   const equalContact = contacts.find((c) => c.name.includes(name));\n\n  //   if (equalContact) {\n  //     alert(`${name} is already in contacts`);\n  //   } else {\n  //     setContacts((contacts) => [contact, ...contacts]);\n  //   }\n  // };\n\n  // const filterContacts = () => {\n  //   const toLowerCaseFilter = filter.toLowerCase();\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(toLowerCaseFilter)\n  //   );\n  // };\n\n  // const filterChange = (e) => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // const onDelete = (id) => {\n  //   setContacts(contacts.filter((contact) => contact.id !== id));\n  // };\n\n  // const formSubmit = (data) => {\n  //   addContact(data);\n  // };\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default connect()(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport phoneBookActions from \"./phoneBookActions\";\n\nconst initialStateContacts = {\n  contacts: {\n    items: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n  },\n};\n\nconst items = createReducer(initialStateContacts.contacts.items, {\n  [phoneBookActions.addContact]: (state, { payload }) => [...state, payload],\n  [phoneBookActions.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.name !== payload.name),\n});\nconst filter = createReducer(initialStateContacts.contacts.filter, {\n  [phoneBookActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactReducer from \"./phoneBookReducer\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  blacklist: [\"filter\", \"_persist\"],\n  storage,\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nconst storeElements = { store, persistor };\n\nexport default storeElements;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3HJB-\",\"formLabel\":\"ContactForm_formLabel__2RceG\",\"formInput\":\"ContactForm_formInput__3LRHs\",\"formButton\":\"ContactForm_formButton__1W7Lz\"};"],"sourceRoot":""}