{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/phoneBookActions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","redux/phoneBookReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","phoneBookActions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","contactList","useState","setName","setNumber","dispatch","useDispatch","console","log","handleChange","evt","currentTarget","value","className","s","form","onSubmit","preventDefault","validName","trim","find","contact","alert","formLabel","formInput","type","pattern","title","required","onChange","formButton","ContactList","contacts","useSelector","state","items","normalizeFilter","filter","toLowerCase","item","includes","getFilteredContacts","contactItemsList","map","contactItem","contactDelete","onClick","onDelete","connect","event","target","filterInput","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateContacts","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","blacklist","storage","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","storeElements","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,YAAc,iCAAiC,cAAgB,qC,mBCA1ID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,8B,0KCgBjDC,EAFU,CAAEC,WAZRC,YAAa,uBAAuB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CAC5EC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cAQmCK,cAJjBP,YAAa,0BAImBQ,aAFjCR,YAAa,0B,uBC8EnBS,MApFf,YAAuC,IAAhBC,EAAe,EAAfA,YACrB,EAAwBC,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOT,EAAP,KAAeW,EAAf,KACMC,EAAWC,cAEjBC,QAAQC,IAAIP,GACZ,IAAMQ,EAAe,SAACC,GACpB,MAAwBA,EAAIC,cAApBnB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,MAEd,OAAQpB,GACN,IAAK,OACHW,EAAQS,GACR,MACF,IAAK,SACHR,EAAUQ,GACV,MACF,QACE,SAwBN,OACE,uBAAMC,UAAWC,IAAEC,KAAMC,SAhBN,SAACN,GACpBA,EAAIO,iBAEJ,IAAMC,EAAY1B,EAAK2B,OAGvB,GAFkBlB,EAAYmB,MAAK,SAACC,GAAD,OAAa7B,IAAS6B,EAAQ7B,QAG/D,OAAO8B,MAAM,GAAD,OAAI9B,EAAJ,4BAEV0B,IACFb,EAAShB,EAAiBC,WAAW,CAAEE,OAAMC,YAd/CU,EAAQ,IACRC,EAAU,MAmBV,UACE,wBAAOS,UAAWC,IAAES,UAApB,iBAEE,uBACEV,UAAWC,IAAEU,UACbC,KAAK,OACLjC,KAAK,OACLoB,MAAOpB,EACPkC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUpB,OAId,wBAAOI,UAAWC,IAAES,UAApB,mBAEE,uBACEV,UAAWC,IAAEU,UACbC,KAAK,OACLjC,KAAK,SACLoB,MAAOnB,EACPiC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUpB,OAGd,wBAAQI,UAAWC,IAAEgB,WAAYL,KAAK,SAAtC,6B,iBCnBSM,EAnDK,WAClB,IAOMC,EAAWC,aAAY,SAACC,GAAD,OAPD,SAACA,GAC3B,MAA0BA,EAAMF,SAAxBG,EAAR,EAAQA,MACFC,EADN,EAAeC,OACgBC,cAC/B,OAAOH,EAAME,QAAO,SAACE,GAAD,OAClBA,EAAK/C,KAAK8C,cAAcE,SAASJ,MAGGK,CAAoBP,MAEtD7B,EAAWC,cAIjB,OACE,oBAAIO,UAAWC,IAAE4B,iBAAjB,SACGV,EAASW,KAAI,gBAAGnD,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQE,EAAjB,EAAiBA,GAAjB,OACZ,qBAA6BkB,UAAWC,IAAE8B,YAA1C,UACE,8BACGpD,EADH,KACWC,KAEX,wBACEgC,KAAK,SACLZ,UAAWC,IAAE+B,cACbC,QAAS,kBAZF,SAACnD,GAAD,OAAQU,EAAShB,EAAiBS,cAAcH,IAYxCoD,CAASpD,IAH1B,8BAJOC,IAAQC,kB,iBCGVmD,mBAvBS,SAACd,GAAD,MAAY,CAClCtB,MAAOsB,EAAMF,SAASK,WAEG,SAAChC,GAAD,MAAe,CACxCwB,SAAU,SAACoB,GAAD,OACR5C,EAAShB,EAAiBU,aAAakD,EAAMC,OAAOtC,YAkBzCoC,EAff,YAAsC,IAApBpC,EAAmB,EAAnBA,MAAOiB,EAAY,EAAZA,SACvB,OACE,8BACE,uBAAOhB,UAAWC,IAAEuB,OAApB,SACE,uBACExB,UAAWC,IAAEqC,YACb1B,KAAK,OACLb,MAAOA,EACPiB,SAAUA,WC+DLmB,I,EAAAA,iBA1Ef,WA6DE,IAAMhB,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,SAASG,SAEvD,OACE,sBAAKtB,UAAU,UAAf,UACE,2CACA,cAAC,EAAD,CAAaZ,YAAa+B,IAC1B,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,UClESoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCHRQ,EACM,CACR1B,MAAO,CACL,CAAExC,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,cAGhD4C,OAAQ,IAINF,EAAQ2B,YAAcD,EAA8B1B,OAA/B,mBACxB9C,EAAiBC,YAAa,SAAC4C,EAAD,OAAUxC,EAAV,EAAUA,QAAV,4BAA4BwC,GAA5B,CAAmCxC,OADzC,cAExBL,EAAiBS,eAAgB,SAACoC,EAAD,OAAUxC,EAAV,EAAUA,QAAV,OAChCwC,EAAMG,QAAO,SAACE,GAAD,OAAUA,EAAK5C,KAAOD,QAHZ,IAKrB2C,EAASyB,YAAcD,EAA8BxB,OAA/B,eACzBhD,EAAiBU,cAAe,SAACgE,EAAD,YAAMrE,YAG1BsE,cAAgB,CAC7B7B,QACAE,W,yCCbI4B,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAwB,CAC5BC,IAAK,OACLC,UAAW,CAAC,SAAU,WACtBC,aAGIC,EAAQC,YAAe,CAC3BC,QAAS,CACPlD,SAAUmD,YAAeP,EAAuBQ,IAElDnB,WAAYA,EACZoB,UAAUC,IAOGC,EAFO,CAAEP,QAAOQ,UAFbC,YAAaT,I,QC7B/BU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaa,QAAS,KAAML,UAAWR,EAAMQ,UAA7C,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,SAM1B3C,K,kBCtBAjE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,UAAY,+BAA+B,WAAa,mC","file":"static/js/main.f82319cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItemsList\":\"ContactList_contactItemsList__2f5kD\",\"contactItem\":\"ContactList_contactItem__1zDKP\",\"contactDelete\":\"ContactList_contactDelete__1NDJf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__I7JrZ\",\"filterInput\":\"Filter_filterInput__JLEr5\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport shortid from \"shortid\";\n\nconst addContact = createAction(\"contacts/addContact\", ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"contacts/deleteContact\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nconst phoneBookActions = { addContact, deleteContact, changeFilter };\n\nexport default phoneBookActions;\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport phoneBookActions from \"../../redux/phoneBookActions\";\r\n// import { connect } from \"react-redux\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm({ contactList }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(contactList);\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const validName = name.trim();\r\n    const equalName = contactList.find((contact) => name === contact.name);\r\n\r\n    if (equalName) {\r\n      return alert(`${name} is already in contacts`);\r\n    }\r\n    if (validName) {\r\n      dispatch(phoneBookActions.addContact({ name, number }));\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.formLabel}>\r\n        Name\r\n        <input\r\n          className={s.formInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.formLabel}>\r\n        Number\r\n        <input\r\n          className={s.formInput}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button className={s.formButton} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = ({ contacts: contacts }) => ({ contacts });\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onSubmit: ({ name, number }) =>\r\n//     dispatch(phoneBookActions.addContact({ name, number })),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\nexport default ContactForm;\r\n","// import { connect } from \"react-redux\";\r\nimport phoneBookActions from \"../../redux/phoneBookActions\";\r\nimport shortid from \"shortid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = () => {\r\n  const getFilteredContacts = (state) => {\r\n    const { items, filter } = state.contacts;\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return items.filter((item) =>\r\n      item.name.toLowerCase().includes(normalizeFilter)\r\n    );\r\n  };\r\n  const contacts = useSelector((state) => getFilteredContacts(state));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = (id) => dispatch(phoneBookActions.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.contactItemsList}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={shortid.generate()} className={s.contactItem}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className={s.contactDelete}\r\n            onClick={() => onDelete(id)}\r\n          >\r\n            Delete contact\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// const getVisibleContacts = (allContacts, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   const visibleContacts = allContacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n//   return visibleContacts;\r\n// };\r\n\r\n// const mapStateToProps = ({ contacts: { state } }) => ({\r\n//   contacts: getFilteredContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDelete: (id) => dispatch(phoneBookActions.deleteContact(id)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\nexport default ContactList;\r\n","import s from \"./Filter.module.css\";\r\nimport phoneBookActions from \"../../redux/phoneBookActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (event) =>\r\n    dispatch(phoneBookActions.changeFilter(event.target.value)),\r\n});\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <div>\r\n      <label className={s.filter}>\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./App.css\";\n// import { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n// import shortid from \"shortid\";\n\nfunction App() {\n  // const [contacts, setContacts] = useState([\n  //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  // ]);\n  // const [filter, setFilter] = useState(\"\");\n\n  // useEffect(() => {\n  //   const localContacts = window.localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(localContacts);\n  //   if (parsedContacts) {\n  //     setContacts(parsedContacts);\n  //   }\n  // }, []);\n\n  // const firstRender = useRef(true);\n\n  // useEffect(() => {\n  //   if (firstRender.current) {\n  //     firstRender.current = false;\n  //     return;\n  //   }\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const addContact = ({ name, number }) => {\n  //   const contact = {\n  //     id: shortid.generate(),\n  //     name,\n  //     number,\n  //   };\n\n  //   const equalContact = contacts.find((c) => c.name.includes(name));\n\n  //   if (equalContact) {\n  //     alert(`${name} is already in contacts`);\n  //   } else {\n  //     setContacts((contacts) => [contact, ...contacts]);\n  //   }\n  // };\n\n  // const filterContacts = () => {\n  //   const toLowerCaseFilter = filter.toLowerCase();\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(toLowerCaseFilter)\n  //   );\n  // };\n\n  // const filterChange = (e) => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // const onDelete = (id) => {\n  //   setContacts(contacts.filter((contact) => contact.id !== id));\n  // };\n\n  // const formSubmit = (data) => {\n  //   addContact(data);\n  // };\n  const contacts = useSelector((state) => state.contacts.items);\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Phonebook</h1>\n      <ContactForm contactList={contacts} />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default connect()(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport phoneBookActions from \"./phoneBookActions\";\n\nconst initialStateContacts = {\n  contacts: {\n    items: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n  },\n};\n\nconst items = createReducer(initialStateContacts.contacts.items, {\n  [phoneBookActions.addContact]: (state, { payload }) => [...state, payload],\n  [phoneBookActions.deleteContact]: (state, { payload }) =>\n    state.filter((item) => item.id !== payload),\n});\nconst filter = createReducer(initialStateContacts.contacts.filter, {\n  [phoneBookActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactReducer from \"./phoneBookReducer\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"name\",\n  blacklist: [\"filter\", \"persist\"],\n  storage,\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nconst storeElements = { store, persistor };\n\nexport default storeElements;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3HJB-\",\"formLabel\":\"ContactForm_formLabel__2RceG\",\"formInput\":\"ContactForm_formInput__3LRHs\",\"formButton\":\"ContactForm_formButton__1W7Lz\"};"],"sourceRoot":""}